{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","lastItem","lastPage","Math","ceil","currentItems","pagesArray","className","cn","disabled","href","onClick","map","page","active","item","items","listOfOptions","App","useState","setPerPage","setCurrentPage","length","toItem","fromItem","id","defaultValue","onChange","evt","target","value","option","htmlFor","handlePageChange","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAWH,EAAUC,EACrBG,EAAWC,KAAKC,KAAKP,EAAQC,GAG7BO,EAAef,EADHQ,GAAWC,EAAc,GAAM,EADlCE,EAAWJ,EAAQA,EAAQI,GAGpCK,EAAahB,EAAW,EAAGY,GAEjC,OACE,qCACE,qBAAIK,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBV,IAA3C,SACE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EAAoB,OAAS,QAC5CY,QAAS,WAKPX,EAJgBD,EAAc,GAAK,EAC/B,EACAA,EAAc,IARtB,oBAgBDO,EAAWM,KAAI,SAACC,GAAD,OACd,oBAEEN,UAAWC,IAAG,YAAa,CAAEM,OAAQf,IAAgBc,IAFvD,SAIE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,KATEA,MAcT,oBACEN,UAAWC,IAAG,YAAa,CAAEC,SAAUV,IAAgBG,IADzD,SAGE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBG,EAAW,OAAS,QACnDS,QAAS,WAKPX,EAJgBD,EAAc,GAAKG,EAC/BA,EACAH,EAAc,IARtB,uBAiBJ,6BACGM,EAAaO,KAAI,SAACG,GAAD,OAChB,oBAEE,UAAQ,OAFV,wBAIWA,IAHJA,YC7EXC,EAAQ1B,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEduB,EAAgB,CAAC,EAAG,EAAG,GAAI,IAEpBC,EAAgB,WAC3B,MAA8BC,mBAASF,EAAc,IAArD,mBAAOnB,EAAP,KAAgBsB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOpB,EAAP,KAAoBsB,EAApB,KACMxB,EAAQmB,EAAMM,OACdrB,EAAWF,EAAcD,EACzByB,EAAStB,EAAWJ,EAAQA,EAAQI,EACpCuB,EAAY1B,GAAWC,EAAc,GAAM,EAWjD,OACE,sBAAKQ,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCyB,EADjC,cAC+CD,EAD/C,eAC4D1B,EAD5D,OAIA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRkB,GAAG,kBACHlB,UAAU,eACVmB,aAAc5B,EACd6B,SApBV,SAA4BC,GAC1BR,GAAYQ,EAAIC,OAAOC,OACvBT,EAAe,IAaT,SAOGJ,EAAcL,KAAI,SAACmB,GAAD,OACjB,wBAEED,MAAOC,EAFT,SAIGA,GAHIA,UASb,uBAAOC,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACa,GAAD,OA9CpB,SAA0BA,GACxBQ,EAAeR,GA6CaoB,CAAiBpB,UC7DjDqB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.eec027ae.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const lastItem = perPage * currentPage;\n  const lastPage = Math.ceil(total / perPage);\n  const toItem = lastItem > total ? total : lastItem;\n  const fromItem = (perPage * (currentPage - 1)) + 1;\n  const currentItems = getNumbers(fromItem, toItem);\n  const pagesArray = getNumbers(1, lastPage);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', { disabled: currentPage === 1 })}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1 ? 'true' : 'false'}\n            onClick={() => {\n              const newPage = currentPage - 1 <= 0\n                ? 1\n                : currentPage - 1;\n\n              onPageChange(newPage);\n            }}\n          >\n            «\n          </a>\n        </li>\n        {pagesArray.map((page) => (\n          <li\n            key={page}\n            className={cn('page-item', { active: currentPage === page })}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={cn('page-item', { disabled: currentPage === lastPage })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === lastPage ? 'true' : 'false'}\n            onClick={() => {\n              const newPage = currentPage + 1 >= lastPage\n                ? lastPage\n                : currentPage + 1;\n\n              onPageChange(newPage);\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {currentItems.map((item) => (\n          <li\n            key={item}\n            data-cy=\"item\"\n          >\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst listOfOptions = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(listOfOptions[1]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const total = items.length;\n  const lastItem = currentPage * perPage;\n  const toItem = lastItem > total ? total : lastItem;\n  const fromItem = (perPage * (currentPage - 1)) + 1;\n\n  function handlePageChange(page: number) {\n    setCurrentPage(page);\n  }\n\n  function handleOptionChange(evt: React.ChangeEvent<HTMLSelectElement>) {\n    setPerPage(+evt.target.value);\n    setCurrentPage(1);\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${fromItem} - ${toItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={perPage}\n            onChange={handleOptionChange}\n          >\n            {listOfOptions.map((option) => (\n              <option\n                key={option}\n                value={option}\n              >\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => handlePageChange(page)}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}